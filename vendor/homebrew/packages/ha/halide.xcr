formula = r"""
class Halide < Formula
  desc "Language for fast, portable data-parallel computation"
  homepage "https://halide-lang.org"
  url "https://github.com/halide/Halide/archive/v12.0.1.tar.gz"
  sha256 "17f7a470c3fcf77205fdcd9d06257f17c1c1a3cda4b8023f56cec160e80bd519"
  license "MIT"

  livecheck do
    url :stable
    strategy :github_latest
  end

  bottle do
    sha256 cellar: :any, arm64_big_sur: "9d2e07f8d238359c6125594da52bb522cf137586fab3a482697430d89f4a5dcf"
    sha256 cellar: :any, big_sur:       "ef1d1441c627a718f1a82e2a2f1bd3ba95e8a49e6d9109cd4028c7ef1b67f256"
    sha256 cellar: :any, catalina:      "82a4041a0628948f8dbd66215496648973d8080edf8e6ec0dc77da82e4e323a7"
    sha256 cellar: :any, mojave:        "3e5702a5fef2471aba848b8a6d77b99c3923ec52fe8eb124370d034c88d6afa1"
  end

  depends_on "cmake" => :build
  depends_on "jpeg"
  depends_on "libpng"
  depends_on "llvm"
  depends_on "python@3.9"

  def install
    mkdir "build" do
      system "cmake", "..", *std_cmake_args, "-DHalide_SHARED_LLVM=ON"
      system "make"
      system "make", "install"
    end
  end

  test do
    cp share/"tutorial/lesson_01_basics.cpp", testpath
    system ENV.cxx, "-std=c++11", "lesson_01_basics.cpp", "-L#{lib}", "-lHalide", "-o", "test"
    assert_match "Success!", shell_output("./test")
  end
end

"""

import "homebrew-install" as hi

import "autoconf" as i0, "automake" as i1, "berkeley-db" as i2, "bzip2" as i3, "cmake" as i4, "expat" as i5, "gdbm" as i6, "jpeg" as i7, "libedit" as i8, "libffi" as i9, "libpng" as i10, "libtool" as i11, "libxml2" as i12, "libyaml" as i13, "llvm" as i14, "m4" as i15, "mpdecimal" as i16, "ncurses" as i17, "openssl@1.1" as i18, "pcre" as i19, "perl" as i20, "pkg-config" as i21, "python@3.9" as i22, "readline" as i23, "ruby" as i24, "sphinx-doc" as i25, "sqlite" as i26, "swig" as i27, "unzip" as i28, "xz" as i29, "zip" as i30, "zlib" as i31

pkg(
  name: "halide",
  version: "12.0.1",
  dependencies: [hi, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31],

  def install(ctx) {
    ctx.write_file(join(ctx.build, "halide.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./halide.rb")
  }
)
