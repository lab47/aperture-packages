formula = r"""
class Ledger < Formula
  desc "Command-line, double-entry accounting tool"
  homepage "https://ledger-cli.org/"
  url "https://github.com/ledger/ledger/archive/v3.2.1.tar.gz"
  sha256 "92bf09bc385b171987f456fe3ee9fa998ed5e40b97b3acdd562b663aa364384a"
  license "BSD-3-Clause"
  revision 5
  head "https://github.com/ledger/ledger.git"

  livecheck do
    url :stable
    regex(/^v?(\d+(?:\.\d+)+)$/i)
  end

  bottle do
    sha256 cellar: :any,                 arm64_big_sur: "98a7a5651f041ffe2d668b43cc89e3bda66f2adf5ba544d0a8cb3f86569605c8"
    sha256 cellar: :any,                 big_sur:       "c46124378d3e8dd05f8f5e560828de661eae53acd39adb29cc70688b96e1244e"
    sha256 cellar: :any,                 catalina:      "8c83cc769a1331bf408af4670a47f4c95a4a173b66a9614bf4c29a57b33bf0d3"
    sha256 cellar: :any,                 mojave:        "761506a14de02edb89e9d77465728504596bb53e140720609fed02035b46434a"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "a31453d0898b9116c7541e94be2271e49e30984ad563289d80bf114e6819450d"
  end

  depends_on "cmake" => :build
  depends_on "boost"
  depends_on "gmp"
  depends_on "mpfr"
  depends_on "python@3.9"

  uses_from_macos "groff"

  # Compatibility with Boost 1.76
  # https://github.com/ledger/ledger/issues/2030
  patch :DATA

  def install
    ENV.cxx11
    ENV.prepend_path "PATH", Formula["python@3.9"].opt_libexec/"bin"

    args = %W[
      --jobs=#{ENV.make_jobs}
      --output=build
      --prefix=#{prefix}
      --boost=#{Formula["boost"].opt_prefix}
      --
      -DBUILD_DOCS=1
      -DBUILD_WEB_DOCS=1
      -DBoost_NO_BOOST_CMAKE=ON
      -DPython_FIND_VERSION_MAJOR=3
    ] + std_cmake_args
    system "./acprep", "opt", "make", *args
    system "./acprep", "opt", "make", "doc", *args
    system "./acprep", "opt", "make", "install", *args

    (pkgshare/"examples").install Dir["test/input/*.dat"]
    pkgshare.install "contrib"
    elisp.install Dir["lisp/*.el", "lisp/*.elc"]
    bash_completion.install pkgshare/"contrib/ledger-completion.bash"
  end

  test do
    balance = testpath/"output"
    system bin/"ledger",
      "--args-only",
      "--file", "#{pkgshare}/examples/sample.dat",
      "--output", balance,
      "balance", "--collapse", "equity"
    assert_equal "          $-2,500.00  Equity", balance.read.chomp
    assert_equal 0, $CHILD_STATUS.exitstatus
  end
end

__END__
diff --git a/src/expr.cc b/src/expr.cc
index c8945d3..136fc97 100644
--- a/src/expr.cc
+++ b/src/expr.cc
@@ -34,6 +34,7 @@
 #include "expr.h"
 #include "parser.h"
 #include "scope.h"
+#include <memory>

 namespace ledger {

@@ -278,7 +279,7 @@ value_t expr_value(expr_t::ptr_op_t op)
 value_t source_command(call_scope_t& args)
 {
   std::istream * in = NULL;
-  scoped_ptr<ifstream> stream;
+  std::unique_ptr<ifstream> stream;
   string pathname;

   if (args.has(0)) {
diff --git a/src/format.h b/src/format.h
index 15431cf..c12f1c9 100644
--- a/src/format.h
+++ b/src/format.h
@@ -44,6 +44,7 @@

 #include "expr.h"
 #include "unistring.h"
+#include <memory>

 namespace ledger {

@@ -65,7 +66,7 @@ class format_t : public expr_base_t<string>, public noncopyable
     std::size_t                  min_width;
     std::size_t                  max_width;
     variant<string, expr_t>      data;
-    scoped_ptr<struct element_t> next;
+    std::unique_ptr<struct element_t> next;

     element_t() throw()
       : supports_flags<>(), type(STRING), min_width(0), max_width(0) {
@@ -103,7 +104,7 @@ class format_t : public expr_base_t<string>, public noncopyable
     void dump(std::ostream& out) const;
   };

-  scoped_ptr<element_t> elements;
+  std::unique_ptr<element_t> elements;

 public:
   static enum elision_style_t {

"""

import "homebrew-install" as hi

import "apr" as i0, "apr-util" as i1, "autoconf" as i2, "automake" as i3, "berkeley-db" as i4, "bison" as i5, "boost" as i6, "bzip2" as i7, "cmake" as i8, "doxygen" as i9, "expat" as i10, "flex" as i11, "fontconfig" as i12, "freetype" as i13, "gdbm" as i14, "gettext" as i15, "ghostscript" as i16, "gmp" as i17, "gperf" as i18, "groff" as i19, "help2man" as i20, "icu4c" as i21, "jasper" as i22, "jbig2dec" as i23, "jpeg" as i24, "krb5" as i25, "libffi" as i26, "libidn" as i27, "libpng" as i28, "libtiff" as i29, "libtool" as i30, "libxml2" as i31, "libyaml" as i32, "little-cms2" as i33, "lz4" as i34, "m4" as i35, "mpdecimal" as i36, "mpfr" as i37, "ncurses" as i38, "netpbm" as i39, "openjdk" as i40, "openjpeg" as i41, "openssl@1.1" as i42, "pcre" as i43, "perl" as i44, "pkg-config" as i45, "psutils" as i46, "python@3.9" as i47, "readline" as i48, "ruby" as i49, "scons" as i50, "sphinx-doc" as i51, "sqlite" as i52, "subversion" as i53, "swig" as i54, "texinfo" as i55, "uchardet" as i56, "unzip" as i57, "utf8proc" as i58, "xz" as i59, "zip" as i60, "zlib" as i61

pkg(
  name: "ledger",
  version: "3.2.1",
  dependencies: [hi, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61],

  def install(ctx) {
    ctx.write_file(join(ctx.build, "ledger.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./ledger.rb")
  }
)
