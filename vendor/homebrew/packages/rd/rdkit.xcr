formula = r"""
class Rdkit < Formula
  desc "Open-source chemoinformatics library"
  homepage "https://rdkit.org/"
  url "https://github.com/rdkit/rdkit/archive/Release_2021_03_3.tar.gz"
  sha256 "e95f07adaee9280df077cb147210ee75e16957d81687ab0836d62ebf1f6f715f"
  license "BSD-3-Clause"
  head "https://github.com/rdkit/rdkit.git"

  livecheck do
    url :stable
    regex(/^Release[._-](\d+(?:[._]\d+)+)$/i)
    strategy :git do |tags|
      tags.map { |tag| tag[regex, 1]&.gsub("_", ".") }.compact
    end
  end

  bottle do
    sha256 cellar: :any, arm64_big_sur: "f065b2f947c24fe8b52fc84766f511dd9a695546933597c4fe5df1844e4f1588"
    sha256 cellar: :any, big_sur:       "e786992d134187bff83938ee4d2b05ee7cbc75d13ab41470e808fc7a12e4ee4c"
    sha256 cellar: :any, catalina:      "24283966e3001e25b283e917d2ad4b0619563560991814864e9192b2c8093673"
    sha256 cellar: :any, mojave:        "bd83ea1458265dfb3141cf3644db8c50579668c8ee317f0c4b53115a195cb617"
  end

  depends_on "cmake" => :build
  depends_on "swig" => :build
  depends_on "boost"
  depends_on "boost-python3"
  depends_on "eigen"
  depends_on "freetype"
  depends_on "numpy"
  depends_on "postgresql"
  depends_on "py3cairo"
  depends_on "python@3.9"

  def install
    ENV.cxx11
    ENV.libcxx
    ENV.append "CFLAGS", "-Wno-parentheses -Wno-logical-op-parentheses -Wno-format"
    ENV.append "CXXFLAGS", "-Wno-parentheses -Wno-logical-op-parentheses -Wno-format"

    # Get Python location
    python_executable = Formula["python@3.9"].opt_bin/"python3"
    py3ver = Language::Python.major_minor_version Formula["python@3.9"].opt_bin/"python3"
    py3prefix = Formula["python@3.9"].opt_frameworks/"Python.framework/Versions/#{py3ver}"
    on_linux do
      py3prefix = Formula["python@3.9"].opt_prefix
    end
    py3include = "#{py3prefix}/include/python#{py3ver}"
    numpy_include = Formula["numpy"].opt_lib/"python#{py3ver}/site-packages/numpy/core/include"

    # set -DMAEPARSER and COORDGEN_FORCE_BUILD=ON to avoid conflicts with some formulae i.e. open-babel
    args = std_cmake_args + %W[
      -DCMAKE_INSTALL_RPATH=#{opt_lib}
      -DRDK_INSTALL_INTREE=OFF
      -DRDK_BUILD_SWIG_WRAPPERS=OFF
      -DRDK_BUILD_AVALON_SUPPORT=ON
      -DRDK_BUILD_PGSQL=ON
      -DRDK_PGSQL_STATIC=ON
      -DMAEPARSER_FORCE_BUILD=ON
      -DCOORDGEN_FORCE_BUILD=ON
      -DRDK_BUILD_INCHI_SUPPORT=ON
      -DRDK_BUILD_CPP_TESTS=OFF
      -DRDK_INSTALL_STATIC_LIBS=OFF
      -DRDK_BUILD_CAIRO_SUPPORT=ON
      -DRDK_BUILD_YAEHMOP_SUPPORT=ON
      -DRDK_BUILD_FREESASA_SUPPORT=ON
      -DBoost_NO_BOOST_CMAKE=ON
      -DPYTHON_INCLUDE_DIR=#{py3include}
      -DPYTHON_EXECUTABLE=#{python_executable}
      -DPYTHON_NUMPY_INCLUDE_PATH=#{numpy_include}
    ]

    system "cmake", ".", *args
    system "make"
    system "make", "install"

    site_packages = "lib/python#{py3ver}/site-packages"
    (prefix/site_packages/"homebrew-rdkit.pth").write libexec/site_packages
  end

  def caveats
    <<~EOS
      You may need to add RDBASE to your environment variables.
      For Bash, put something like this in your $HOME/.bashrc:
        export RDBASE=#{HOMEBREW_PREFIX}/share/RDKit
    EOS
  end

  test do
    system Formula["python@3.9"].opt_bin/"python3", "-c", "import rdkit"
    (testpath/"test.py").write <<~EOS
      from rdkit import Chem ; print(Chem.MolToSmiles(Chem.MolFromSmiles('C1=CC=CN=C1')))
    EOS
    assert_match "c1ccncc1", shell_output("#{Formula["python@3.9"].opt_bin}/python3 test.py 2>&1")
  end
end

"""

import "homebrew-install" as hi

import "autoconf" as i0, "automake" as i1, "berkeley-db" as i2, "bison" as i3, "boost" as i4, "boost-python3" as i5, "bzip2" as i6, "cairo" as i7, "cmake" as i8, "cython" as i9, "eigen" as i10, "expat" as i11, "fontconfig" as i12, "freetype" as i13, "gcc" as i14, "gdbm" as i15, "gettext" as i16, "glib" as i17, "gmp" as i18, "gperf" as i19, "icu4c" as i20, "isl" as i21, "krb5" as i22, "libffi" as i23, "libgcrypt" as i24, "libgpg-error" as i25, "libmpc" as i26, "libpng" as i27, "libpthread-stubs" as i28, "libtool" as i29, "libx11" as i30, "libxau" as i31, "libxcb" as i32, "libxdmcp" as i33, "libxext" as i34, "libxml2" as i35, "libxrender" as i36, "libxslt" as i37, "libyaml" as i38, "lzo" as i39, "m4" as i40, "meson" as i41, "mpdecimal" as i42, "mpfr" as i43, "ncurses" as i44, "ninja" as i45, "numpy" as i46, "openblas" as i47, "openldap" as i48, "openssl@1.1" as i49, "pcre" as i50, "perl" as i51, "pixman" as i52, "pkg-config" as i53, "postgresql" as i54, "py3cairo" as i55, "python@3.9" as i56, "readline" as i57, "ruby" as i58, "sphinx-doc" as i59, "sqlite" as i60, "swig" as i61, "unzip" as i62, "util-macros" as i63, "xcb-proto" as i64, "xorgproto" as i65, "xtrans" as i66, "xz" as i67, "zip" as i68, "zlib" as i69, "zstd" as i70

pkg(
  name: "rdkit",
  version: "2021.03.3",
  dependencies: [hi, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70],

  def install(ctx) {
    ctx.write_file(join(ctx.build, "rdkit.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./rdkit.rb")
  }
)
