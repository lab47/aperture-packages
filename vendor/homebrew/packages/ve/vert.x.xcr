formula = r"""
class VertX < Formula
  desc "Toolkit for building reactive applications on the JVM"
  homepage "https://vertx.io/"
  url "https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/4.1.0/vertx-stack-manager-4.1.0-full.tar.gz"
  sha256 "6adff5f9dc1018170ed0bfeae51b1de166e752b7475a999006398dc2a21279bd"
  license any_of: ["EPL-2.0", "Apache-2.0"]

  livecheck do
    url "https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/"
    regex(%r{href=["']?v?(\d+(?:\.\d+)+)/?["' >]}i)
  end

  depends_on "openjdk"

  def install
    rm_f Dir["bin/*.bat"]
    libexec.install %w[bin conf lib]
    (bin/"vertx").write_env_script "#{libexec}/bin/vertx", Language::Java.overridable_java_home_env
  end

  test do
    (testpath/"HelloWorld.java").write <<~EOS
      import io.vertx.core.AbstractVerticle;
      public class HelloWorld extends AbstractVerticle {
        public void start() {
          System.out.println("Hello World!");
          vertx.close();
          System.exit(0);
        }
      }
    EOS
    output = shell_output("#{bin}/vertx run HelloWorld.java")
    assert_equal "Hello World!\n", output
  end
end

"""

import "homebrew-install" as hi

import "openjdk" as i0

pkg(
  name: "vert.x",
  version: "4.1.0",
  description: "Toolkit for building reactive applications on the JVM",
  url: "https://vertx.io/",
  metadata: %{
    "license": "EPL-2.0 or Apache-2.0",
    "source": "homebrew",
  },
  dependencies: [hi, i0],

  def install(ctx) {
    ctx.write_file(join(ctx.build, "vert.x.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./vert.x.rb")
  }
)
