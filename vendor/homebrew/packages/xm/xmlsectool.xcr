formula = r"""
class Xmlsectool < Formula
  desc "Check schema validity and signature of an XML document"
  homepage "https://wiki.shibboleth.net/confluence/display/XSTJ3/xmlsectool+V3+Home"
  url "https://shibboleth.net/downloads/tools/xmlsectool/3.0.0/xmlsectool-3.0.0-bin.zip"
  sha256 "5b430dda0bf78df224495b39f83cf043d96c0ab9c8ccaa23fbdb56068c46abbc"
  license "Apache-2.0"

  livecheck do
    url "https://shibboleth.net/downloads/tools/xmlsectool/latest/"
    regex(/href=.*?xmlsectool[._-]v?(\d+(?:\.\d+)+)(?:-bin)?\.zip/i)
  end

  depends_on "openjdk"

  def install
    prefix.install "doc/LICENSE.txt"
    rm_rf "doc"
    libexec.install Dir["*"]
    (bin/"xmlsectool").write_env_script "#{libexec}/xmlsectool.sh", JAVA_HOME: Formula["openjdk"].opt_prefix
  end

  test do
    system "#{bin}/xmlsectool", "--listBlacklist"
  end
end

"""

deps = []

import "homebrew-install" as hi

if platform.os == "darwin" {
    import "openjdk" as i0
    deps = [hi, i0]
} else {
    import "openjdk" as i0
    deps = [hi, i0]
}

pkg(
  name: "xmlsectool",
  version: "3.0.0",
  description: "Check schema validity and signature of an XML document",
  url: "https://wiki.shibboleth.net/confluence/display/XSTJ3/xmlsectool+V3+Home",
  metadata: %{
    "license": "Apache-2.0",
    "source": "homebrew",
  },
  dependencies: deps,

  def install(ctx) {
    ctx.write_file(join(ctx.build, "xmlsectool.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./xmlsectool.rb")
  }
)
