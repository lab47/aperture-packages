formula = r"""
class Quex < Formula
  desc "Generate lexical analyzers"
  homepage "https://quex.sourceforge.io/"
  url "https://downloads.sourceforge.net/project/quex/quex-0.71.2.zip"
  sha256 "0453227304a37497e247e11b41a1a8eb04bcd0af06a3f9d627d706b175a8a965"
  license "MIT"
  head "https://svn.code.sf.net/p/quex/code/trunk"

  livecheck do
    url :stable
    regex(%r{url=.*?/quex[._-]v?(\d+(?:\.\d+)+)\.[tz]}i)
  end

  bottle do
    sha256 cellar: :any_skip_relocation, x86_64_linux: "0846e378796efe8d17ffb22efb697e35f4d2c3e540e7b390e3e63ac73ac9d620"
  end

  depends_on "python@3.9"

  def install
    libexec.install "quex", "quex-exe.py"
    doc.install "README", "demo"

    # Use a shim script to set QUEX_PATH on the user's behalf
    (bin/"quex").write <<~EOS
      #!/bin/bash
      QUEX_PATH="#{libexec}" "#{Formula["python@3.9"].opt_bin}/python3" "#{libexec}/quex-exe.py" "$@"
    EOS

    if build.head?
      man1.install "doc/manpage/quex.1"
    else
      man1.install "manpage/quex.1"
    end
  end

  test do
    system bin/"quex", "-i", doc/"demo/C/01-Trivial/easy.qx", "-o", "tiny_lexer"
    assert_predicate testpath/"tiny_lexer", :exist?
  end
end

"""

deps = []

import "homebrew-install" as hi

if platform.os == "darwin" {
    import "python@3.9" as i0
    deps = [hi, i0]
} else {
    import "python@3.9" as i0
    deps = [hi, i0]
}

pkg(
  name: "quex",
  version: "0.71.2",
  description: "Generate lexical analyzers",
  url: "https://quex.sourceforge.io/",
  metadata: %{
    "license": "MIT",
    "source": "homebrew",
  },
  dependencies: deps,

  def install(ctx) {
    ctx.write_file(join(ctx.build, "quex.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./quex.rb")
  }
)
