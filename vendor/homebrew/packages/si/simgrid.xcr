formula = r"""
class Simgrid < Formula
  include Language::Python::Shebang

  desc "Studies behavior of large-scale distributed systems"
  homepage "https://simgrid.org/"
  url "https://framagit.org/simgrid/simgrid/uploads/b95690ca814bc12e905115e51e45112d/simgrid-3.27.tar.gz"
  sha256 "51aeb9de0434066e5fec40e785f5ea9fa934afe7f6bfb4aa627246e765f1d6d7"

  livecheck do
    url :homepage
    regex(/href=.*?simgrid[._-]v?(\d+(?:\.\d+)+)\.t/i)
  end

  bottle do
    sha256 arm64_big_sur: "dbab289fbc454217f97b144d32d441b78fd349da13defaaf504d7f54c663f510"
    sha256 big_sur:       "49e55f07772e9f9658a37ea9b6a81165b0b21848c9fde408a7ffaec0c1d99a1c"
    sha256 catalina:      "42ffd1847e81c70671ca4d27e9068366231b3205b329a02d5f1e0a517bcf945d"
    sha256 mojave:        "d94db131d78f63ff9494f528ca5ae2dff0ad0c9fbc080378080e826dfe368da5"
    sha256 x86_64_linux:  "899358a28ff07b30c326cd3f775eccc494ab8ff0a3e68b7c52dca4f3c7c1ad09"
  end

  depends_on "cmake" => :build
  depends_on "doxygen" => :build
  depends_on "boost"
  depends_on "graphviz"
  depends_on "pcre"
  depends_on "python@3.9"

  def install
    # Avoid superenv shim references
    inreplace "src/smpi/smpicc.in", "@CMAKE_C_COMPILER@", "/usr/bin/clang"
    inreplace "src/smpi/smpicxx.in", "@CMAKE_CXX_COMPILER@", "/usr/bin/clang++"

    # FindPythonInterp is broken in CMake 3.19+
    # REMOVE ME AT VERSION BUMP (after 3.25)
    # https://framagit.org/simgrid/simgrid/-/issues/59
    # https://framagit.org/simgrid/simgrid/-/commit/3a987e0a881dc1a0bb5a6203814f7960a5f4b07e
    inreplace "CMakeLists.txt", "include(FindPythonInterp)", ""
    python = Formula["python@3.9"]
    python_version = python.version
    # We removed CMake's ability to find Python, so we have to point to it ourselves
    args = %W[
      -DPYTHONINTERP_FOUND=TRUE
      -DPYTHON_EXECUTABLE=#{python.opt_bin}/python3
      -DPYTHON_VERSION_STRING=#{python_version}
      -DPYTHON_VERSION_MAJOR=#{python_version.major}
      -DPYTHON_VERSION_MINOR=#{python_version.minor}
      -DPYTHON_VERSION_PATCH=#{python_version.patch}
    ]
    # End of local workaround, remove the above at version bump

    system "cmake", ".",
                    "-Denable_debug=on",
                    "-Denable_compile_optimizations=off",
                    "-Denable_fortran=off",
                    *std_cmake_args,
                    *args # Part of workaround, remove at version bump
    system "make", "install"

    bin.find { |f| rewrite_shebang detected_python_shebang, f }
  end

  test do
    (testpath/"test.c").write <<~EOS
      #include <stdio.h>
      #include <stdlib.h>
      #include <simgrid/engine.h>

      int main(int argc, char* argv[]) {
        printf("%f", simgrid_get_clock());
        return 0;
      }
    EOS

    system ENV.cc, "test.c", "-I#{include}", "-L#{lib}", "-lsimgrid",
                   "-o", "test"
    system "./test"
  end
end

"""

import "homebrew-install" as hi

import "apr" as i0, "apr-util" as i1, "autoconf" as i2, "automake" as i3, "berkeley-db" as i4, "bison" as i5, "boost" as i6, "brotli" as i7, "bzip2" as i8, "c-ares" as i9, "cairo" as i10, "cmake" as i11, "curl" as i12, "doxygen" as i13, "expat" as i14, "flex" as i15, "fontconfig" as i16, "freetype" as i17, "fribidi" as i18, "gd" as i19, "gdbm" as i20, "gdk-pixbuf" as i21, "gettext" as i22, "ghostscript" as i23, "glib" as i24, "gobject-introspection" as i25, "gperf" as i26, "graphite2" as i27, "graphviz" as i28, "groff" as i29, "gts" as i30, "harfbuzz" as i31, "help2man" as i32, "icu4c" as i33, "jasper" as i34, "jbig2dec" as i35, "jemalloc" as i36, "jpeg" as i37, "krb5" as i38, "libev" as i39, "libffi" as i40, "libidn" as i41, "libidn2" as i42, "libpng" as i43, "libpthread-stubs" as i44, "librsvg" as i45, "libssh2" as i46, "libtiff" as i47, "libtool" as i48, "libunistring" as i49, "libx11" as i50, "libxau" as i51, "libxcb" as i52, "libxdmcp" as i53, "libxext" as i54, "libxml2" as i55, "libxrender" as i56, "libyaml" as i57, "little-cms2" as i58, "lz4" as i59, "lzo" as i60, "m4" as i61, "meson" as i62, "mpdecimal" as i63, "ncurses" as i64, "netpbm" as i65, "nghttp2" as i66, "ninja" as i67, "openjdk" as i68, "openjpeg" as i69, "openldap" as i70, "openssl@1.1" as i71, "pango" as i72, "pcre" as i73, "perl" as i74, "pixman" as i75, "pkg-config" as i76, "psutils" as i77, "python@3.9" as i78, "readline" as i79, "rtmpdump" as i80, "ruby" as i81, "rust" as i82, "scons" as i83, "sphinx-doc" as i84, "sqlite" as i85, "subversion" as i86, "swig" as i87, "texinfo" as i88, "uchardet" as i89, "unzip" as i90, "utf8proc" as i91, "util-macros" as i92, "webp" as i93, "xcb-proto" as i94, "xorgproto" as i95, "xtrans" as i96, "xz" as i97, "zip" as i98, "zlib" as i99, "zstd" as i100

pkg(
  name: "simgrid",
  version: "3.27",
  dependencies: [hi, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, i91, i92, i93, i94, i95, i96, i97, i98, i99, i100],

  def install(ctx) {
    ctx.write_file(join(ctx.build, "simgrid.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./simgrid.rb")
  }
)
