formula = r"""
class Ispc < Formula
  desc "Compiler for SIMD programming on the CPU"
  homepage "https://ispc.github.io"
  url "https://github.com/ispc/ispc/archive/v1.16.0.tar.gz"
  sha256 "c6b1c5487ce0e6b439e7cdf6656179092204a4256f99615485f0569b72dc74b0"
  license "BSD-3-Clause"

  bottle do
    sha256 cellar: :any, arm64_big_sur: "de0632493d1334c9ceaaca224a6be694dc8f5467a385f4c8b615b15ee4414b85"
    sha256 cellar: :any, big_sur:       "35fd6fccc755ce60f51b9c86eb0c858cb1f5629b1b8860089ba78b6a62ca152a"
    sha256 cellar: :any, catalina:      "a10f0f931208cf025e41d3128b83521407f01a660c44cb29deca6c6e8ae4243d"
    sha256 cellar: :any, mojave:        "4c2b2edfa26e441cb9f48807f9fc567c865c00ede1b17232d85d7a18dcc7b2e1"
  end

  depends_on "bison" => :build
  depends_on "cmake" => :build
  depends_on "flex" => :build
  depends_on "python@3.9" => :build
  depends_on "llvm"

  def install
    args = std_cmake_args + %W[
      -DISPC_INCLUDE_EXAMPLES=OFF
      -DISPC_INCLUDE_TESTS=OFF
      -DISPC_INCLUDE_UTILS=OFF
      -DLLVM_TOOLS_BINARY_DIR='#{Formula["llvm"].opt_bin}'
      -DISPC_NO_DUMPS=ON
      -DARM_ENABLED=#{Hardware::CPU.arm? ? "ON" : "OFF"}
    ]

    mkdir "build" do
      system "cmake", *args, ".."
      system "make"
      system "make", "install"
    end
  end

  test do
    (testpath/"simple.ispc").write <<~EOS
      export void simple(uniform float vin[], uniform float vout[], uniform int count) {
        foreach (index = 0 ... count) {
          float v = vin[index];
          if (v < 3.)
            v = v * v;
          else
            v = sqrt(v);
          vout[index] = v;
        }
      }
    EOS

    if Hardware::CPU.arm?
      arch = "aarch64"
      target = "neon"
    else
      arch = "x86-64"
      target = "sse2"
    end
    system bin/"ispc", "--arch=#{arch}", "--target=#{target}", testpath/"simple.ispc",
      "-o", "simple_ispc.o", "-h", "simple_ispc.h"

    (testpath/"simple.cpp").write <<~EOS
      #include "simple_ispc.h"
      int main() {
        float vin[9], vout[9];
        for (int i = 0; i < 9; ++i) vin[i] = static_cast<float>(i);
        ispc::simple(vin, vout, 9);
        return 0;
      }
    EOS
    system ENV.cxx, "-I#{testpath}", "-c", "-o", testpath/"simple.o", testpath/"simple.cpp"
    system ENV.cxx, "-o", testpath/"simple", testpath/"simple.o", testpath/"simple_ispc.o"

    system testpath/"simple"
  end
end

"""

import "homebrew-install" as hi

import "autoconf" as i0, "automake" as i1, "berkeley-db" as i2, "bison" as i3, "bzip2" as i4, "cmake" as i5, "expat" as i6, "flex" as i7, "gdbm" as i8, "gettext" as i9, "help2man" as i10, "libedit" as i11, "libffi" as i12, "libtool" as i13, "libxml2" as i14, "libyaml" as i15, "llvm" as i16, "m4" as i17, "mpdecimal" as i18, "ncurses" as i19, "openssl@1.1" as i20, "pcre" as i21, "perl" as i22, "pkg-config" as i23, "python@3.9" as i24, "readline" as i25, "ruby" as i26, "sphinx-doc" as i27, "sqlite" as i28, "swig" as i29, "unzip" as i30, "xz" as i31, "zip" as i32, "zlib" as i33

pkg(
  name: "ispc",
  version: "1.16.0",
  dependencies: [hi, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33],

  def install(ctx) {
    ctx.write_file(join(ctx.build, "ispc.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./ispc.rb")
  }
)
