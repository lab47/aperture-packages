formula = r"""
class Cake < Formula
  desc "Cross platform build automation system with a C# DSL"
  homepage "https://cakebuild.net/"
  url "https://github.com/cake-build/cake/releases/download/v1.1.0/Cake-bin-net461-v1.1.0.zip"
  sha256 "e556aaf3675728ce349569bd19b32492c36a9d9ad97acf3e1e007bab8f6eddfa"
  license "MIT"

  depends_on "mono"

  conflicts_with "coffeescript", because: "both install `cake` binaries"

  def install
    libexec.install Dir["*.dll"]
    libexec.install Dir["*.exe"]
    libexec.install Dir["*.xml"]

    bin.mkpath
    (bin/"cake").write <<~EOS
      #!/bin/bash
      mono #{libexec}/Cake.exe "$@"
    EOS
  end

  test do
    (testpath/"build.cake").write <<~EOS
      var target = Argument ("target", "info");

      Task("info").Does(() =>
      {
        Information ("Hello Homebrew");
      });

      RunTarget ("info");
    EOS
    assert_match "Hello Homebrew\n", shell_output("#{bin}/cake build.cake")
  end
end

"""

import "homebrew-install" as hi

import "mono" as i0

pkg(
  name: "cake",
  version: "1.1.0",
  description: "Cross platform build automation system with a C# DSL",
  url: "https://cakebuild.net/",
  metadata: %{
    "license": "MIT",
    "source": "homebrew",
  },
  dependencies: [hi, i0],

  def install(ctx) {
    ctx.write_file(join(ctx.build, "cake.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./cake.rb")
  }
)
