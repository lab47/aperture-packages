formula = r"""
class Tectonic < Formula
  desc "Modernized, complete, self-contained TeX/LaTeX engine"
  homepage "https://tectonic-typesetting.github.io/"
  url "https://github.com/tectonic-typesetting/tectonic/archive/tectonic@0.6.1.tar.gz"
  sha256 "a198911d9266b3c884bd2c89ad1727d0e905d3d8326e0a26d5976376bacacb6b"
  license "MIT"

  # As of writing, only the tags starting with `tectonic@` are release versions.
  # NOTE: The `GithubLatest` strategy cannot be used here because the "latest"
  # release on GitHub sometimes points to a tag that isn't a release version.
  livecheck do
    url :stable
    regex(/^tectonic@v?(\d+(?:\.\d+)+)$/i)
  end

  bottle do
    sha256 cellar: :any,                 arm64_big_sur: "089176c05bb4f11c740ffa96a1def9724a935007e46d7808593671d305e1d653"
    sha256 cellar: :any,                 big_sur:       "baa409f10aa604770ad133e9c8f69b6f2715f7dad3de04bad6de2bbb7d1d1c43"
    sha256 cellar: :any,                 catalina:      "35cd044fa4dc7cb46fd5ad5ff1752ac6f7bd88c83519e52d3cf794e01d64eca0"
    sha256 cellar: :any,                 mojave:        "876fb38ae97e568335ab836d6816892b2cfde57aae613685dade54a33def27b9"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "f6e2bf2c1f6cc4e31035ccd3da1533bb3ee0d956ed4f805158d4d4b88b145e7d"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "freetype"
  depends_on "graphite2"
  depends_on "harfbuzz"
  depends_on "icu4c"
  depends_on "libpng"
  depends_on "openssl@1.1"

  def install
    ENV.cxx11
    ENV["MACOSX_DEPLOYMENT_TARGET"] = MacOS.version # needed for CLT-only builds
    ENV.delete("HOMEBREW_SDKROOT") if MacOS.version == :high_sierra

    # Ensure that the `openssl` crate picks up the intended library.
    # https://crates.io/crates/openssl#manual-configuration
    ENV["OPENSSL_DIR"] = Formula["openssl@1.1"].opt_prefix

    system "cargo", "install", "--features", "external-harfbuzz", *std_cargo_args
  end

  test do
    (testpath/"test.tex").write 'Hello, World!\bye'
    system bin/"tectonic", "-o", testpath, "--format", "plain", testpath/"test.tex"
    assert_predicate testpath/"test.pdf", :exist?, "Failed to create test.pdf"
    assert_match "PDF document", shell_output("file test.pdf")
  end
end

"""

deps = []

import "homebrew-install" as hi

if platform.os == "darwin" {
    import "pkg-config" as i0, "rust" as i1, "freetype" as i2, "graphite2" as i3, "harfbuzz" as i4, "icu4c" as i5, "libpng" as i6, "openssl@1.1" as i7
    deps = [hi, i0, i1, i2, i3, i4, i5, i6, i7]
} else {
    import "pkg-config" as i0, "rust" as i1, "freetype" as i2, "graphite2" as i3, "harfbuzz" as i4, "icu4c" as i5, "libpng" as i6, "openssl@1.1" as i7
    deps = [hi, i0, i1, i2, i3, i4, i5, i6, i7]
}

pkg(
  name: "tectonic",
  version: "0.6.1",
  description: "Modernized, complete, self-contained TeX/LaTeX engine",
  url: "https://tectonic-typesetting.github.io/",
  metadata: %{
    "license": "MIT",
    "source": "homebrew",
  },
  dependencies: deps,

  def install(ctx) {
    ctx.write_file(join(ctx.build, "tectonic.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./tectonic.rb")
  }
)
