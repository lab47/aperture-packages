formula = r"""
class Teleport < Formula
  desc "Modern SSH server for teams managing distributed infrastructure"
  homepage "https://gravitational.com/teleport"
  url "https://github.com/gravitational/teleport/archive/v6.2.5.tar.gz"
  sha256 "08d8b931cee7e1b0ef676894fcd30ac057f7eda18cee9e73eddb695c3a5d9108"
  license "Apache-2.0"
  head "https://github.com/gravitational/teleport.git"

  # We check the Git tags instead of using the `GithubLatest` strategy, as the
  # "latest" version can be incorrect. As of writing, two major versions of
  # `teleport` are being maintained side by side and the "latest" tag can point
  # to a release from the older major version.
  livecheck do
    url :stable
    strategy :git
    regex(/^v?(\d+(?:\.\d+)+)$/i)
  end

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_big_sur: "2e286402ce4cb15ecff47ab1730ffd116300574fd70cd9e9855de7028188256e"
    sha256 cellar: :any_skip_relocation, big_sur:       "0feb8ac136d65f2b9087c5770ebae79d7c06b1e9e9b4d06c68cfc837765839d1"
    sha256 cellar: :any_skip_relocation, catalina:      "8032c32a010a0859d798d4dad4fe217e54a4284d6c86fe2688d8111c54390ab5"
    sha256 cellar: :any_skip_relocation, mojave:        "01f722a472b1823e4f21d667b7e308dc937108e4c39167cc0c4e00fbf80d3e0a"
  end

  depends_on "go" => :build

  uses_from_macos "curl" => :test
  uses_from_macos "netcat" => :test
  uses_from_macos "zip"

  conflicts_with "etsh", because: "both install `tsh` binaries"

  # Keep this in sync with https://github.com/gravitational/teleport/tree/v#{version}
  resource "webassets" do
    url "https://github.com/gravitational/webassets/archive/8a30ee4e3570c7db0566028b6b562167aa40f646.tar.gz"
    sha256 "54eedd358523526945d309f16b5c53787bc7a9a9337336661361385a6767fc42"
  end

  def install
    (buildpath/"webassets").install resource("webassets")
    ENV.deparallelize { system "make", "full" }
    bin.install Dir["build/*"]
  end

  test do
    assert_match version.to_s, shell_output("#{bin}/teleport version")
    (testpath/"config.yml").write shell_output("#{bin}/teleport configure")
      .gsub("0.0.0.0", "127.0.0.1")
      .gsub("/var/lib/teleport", testpath)
      .gsub("/var/run", testpath)
      .gsub(/https_(.*)/, "")
    unless OS.mac?
      inreplace testpath/"config.yml", "/usr/bin/hostname", "/bin/hostname"
      inreplace testpath/"config.yml", "/usr/bin/uname", "/bin/uname"
    end
    begin
      debug = OS.mac? ? "" : "DEBUG=1 "
      pid = spawn("#{debug}#{bin}/teleport start -c #{testpath}/config.yml")
      if OS.mac?
        sleep 5
        path = OS.mac? ? "/usr/bin/" : ""
        system "#{path}curl", "--insecure", "https://localhost:3080"
        # Fails on Linux:
        # Failed to update cache: \nERROR REPORT:\nOriginal Error:
        # *trace.NotFoundError open /tmp/teleport-test-20190120-15973-1hx2ui3/cache/auth/localCluster:
        # no such file or directory
        system "#{path}nc", "-z", "localhost", "3022"
        system "#{path}nc", "-z", "localhost", "3023"
        system "#{path}nc", "-z", "localhost", "3025"
      end
    ensure
      Process.kill(9, pid)
    end
  end
end

"""

import "homebrew-install" as hi

import "go" as i0, "zip" as i1

pkg(
  name: "teleport",
  version: "6.2.5",
  description: "Modern SSH server for teams managing distributed infrastructure",
  url: "https://gravitational.com/teleport",
  metadata: %{
    "license": "Apache-2.0",
    "source": "homebrew",
  },
  dependencies: [hi, i0, i1],

  def install(ctx) {
    ctx.write_file(join(ctx.build, "teleport.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./teleport.rb")
  }
)
