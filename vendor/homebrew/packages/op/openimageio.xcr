formula = r"""
class Openimageio < Formula
  desc "Library for reading, processing and writing images"
  homepage "https://openimageio.org/"
  url "https://github.com/OpenImageIO/oiio/archive/Release-2.2.15.0.tar.gz"
  sha256 "5861e2533d7c8f7ca61631abe99e3882f94502617a7ff3ad654f8ea48e0fbd16"
  license "BSD-3-Clause"
  head "https://github.com/OpenImageIO/oiio.git"

  livecheck do
    url :stable
    strategy :github_latest
    regex(%r{href=.*?/tag/(?:Release[._-])?v?(\d+(?:\.\d+)+)["' >]}i)
  end

  bottle do
    sha256 cellar: :any, big_sur:  "b693110c296435405b50537061bf9b8ca21e4693ea27121519ba89b2fcb62c1a"
    sha256 cellar: :any, catalina: "d1153da148ac890bdf42ab17bd41c76563a867f8686fe548e1fde28b897a77cc"
    sha256 cellar: :any, mojave:   "784d117c38635f58d1072262f21c510ca19614e4caa52d440bc6110a9152b17a"
  end

  depends_on "cmake" => :build
  depends_on "pkg-config" => :build
  depends_on "boost"
  depends_on "boost-python3"
  depends_on "ffmpeg"
  depends_on "freetype"
  depends_on "giflib"
  depends_on "imath"
  depends_on "jpeg"
  depends_on "libheif"
  depends_on "libpng"
  depends_on "libraw"
  depends_on "libtiff"
  depends_on "opencolorio"
  depends_on "openexr"
  depends_on "pybind11"
  depends_on "python@3.9"
  depends_on "webp"

  def install
    args = std_cmake_args + %w[
      -DCCACHE_FOUND=
      -DEMBEDPLUGINS=ON
      -DUSE_FIELD3D=OFF
      -DUSE_JPEGTURBO=OFF
      -DUSE_NUKE=OFF
      -DUSE_OPENCV=OFF
      -DUSE_OPENGL=OFF
      -DUSE_OPENJPEG=OFF
      -DUSE_PTEX=OFF
      -DUSE_QT=OFF
    ]

    # CMake picks up the system's python dylib, even if we have a brewed one.
    py3ver = Language::Python.major_minor_version Formula["python@3.9"].opt_bin/"python3"
    py3prefix = Formula["python@3.9"].opt_frameworks/"Python.framework/Versions/#{py3ver}"
    on_linux do
      py3prefix = Formula["python@3.9"].opt_prefix
    end

    ENV["PYTHONPATH"] = lib/"python#{py3ver}/site-packages"

    args << "-DPYTHON_EXECUTABLE=#{py3prefix}/bin/python3"
    args << "-DPYTHON_LIBRARY=#{py3prefix}/lib/#{shared_library("libpython#{py3ver}")}"
    args << "-DPYTHON_INCLUDE_DIR=#{py3prefix}/include/python#{py3ver}"

    mkdir "build" do
      system "cmake", "..", *args
      system "make", "install"
    end
  end

  test do
    test_image = test_fixtures("test.jpg")
    assert_match "#{test_image} :    1 x    1, 3 channel, uint8 jpeg",
                 shell_output("#{bin}/oiiotool --info #{test_image} 2>&1")

    output = <<~EOS
      from __future__ import print_function
      import OpenImageIO
      print(OpenImageIO.VERSION_STRING)
    EOS
    assert_match version.major_minor_patch.to_s, pipe_output(Formula["python@3.9"].opt_bin/"python3", output, 0)
  end
end

"""

import "homebrew-install" as hi

import "aom" as i0, "asciidoc" as i1, "asciidoctor" as i2, "autoconf" as i3, "autoconf-archive" as i4, "automake" as i5, "bdw-gc" as i6, "berkeley-db" as i7, "bison" as i8, "boost" as i9, "boost-python3" as i10, "brotli" as i11, "bzip2" as i12, "c-ares" as i13, "cairo" as i14, "cargo-c" as i15, "cmake" as i16, "curl" as i17, "cython" as i18, "dav1d" as i19, "docbook" as i20, "docbook-xsl" as i21, "doxygen" as i22, "expat" as i23, "ffmpeg" as i24, "flac" as i25, "flex" as i26, "fontconfig" as i27, "freetype" as i28, "frei0r" as i29, "fribidi" as i30, "gcc" as i31, "gdbm" as i32, "gettext" as i33, "giflib" as i34, "glib" as i35, "gmp" as i36, "gnu-getopt" as i37, "gnu-sed" as i38, "gnutls" as i39, "gobject-introspection" as i40, "gperf" as i41, "graphite2" as i42, "guile" as i43, "harfbuzz" as i44, "help2man" as i45, "icu4c" as i46, "imath" as i47, "intltool" as i48, "isl" as i49, "itstool" as i50, "jasper" as i51, "jemalloc" as i52, "jpeg" as i53, "krb5" as i54, "lame" as i55, "leptonica" as i56, "libass" as i57, "libatomic_ops" as i58, "libbluray" as i59, "libde265" as i60, "libev" as i61, "libevent" as i62, "libffi" as i63, "libgcrypt" as i64, "libgit2" as i65, "libgpg-error" as i66, "libheif" as i67, "libidn2" as i68, "libmetalink" as i69, "libmpc" as i70, "libogg" as i71, "libomp" as i72, "libpng" as i73, "libpthread-stubs" as i74, "libraw" as i75, "libsamplerate" as i76, "libsndfile" as i77, "libsodium" as i78, "libsoxr" as i79, "libssh2" as i80, "libtasn1" as i81, "libtiff" as i82, "libtool" as i83, "libunistring" as i84, "libvidstab" as i85, "libvorbis" as i86, "libvpx" as i87, "libx11" as i88, "libxau" as i89, "libxcb" as i90, "libxdmcp" as i91, "libxext" as i92, "libxml2" as i93, "libxrender" as i94, "libxslt" as i95, "little-cms2" as i96, "lzo" as i97, "m4" as i98, "meson" as i99, "mpdecimal" as i100, "mpfr" as i101, "nasm" as i102, "ncurses" as i103, "nettle" as i104, "nghttp2" as i105, "ninja" as i106, "numpy" as i107, "openblas" as i108, "opencolorio" as i109, "opencore-amr" as i110, "openexr" as i111, "openjpeg" as i112, "openldap" as i113, "openssl@1.1" as i114, "opus" as i115, "p11-kit" as i116, "pcre" as i117, "perl" as i118, "pixman" as i119, "pkg-config" as i120, "pybind11" as i121, "python@3.9" as i122, "rav1e" as i123, "readline" as i124, "rtmpdump" as i125, "rubberband" as i126, "rust" as i127, "sdl2" as i128, "shared-mime-info" as i129, "snappy" as i130, "source-highlight" as i131, "speex" as i132, "sphinx-doc" as i133, "sqlite" as i134, "srt" as i135, "tesseract" as i136, "theora" as i137, "unbound" as i138, "unzip" as i139, "util-macros" as i140, "webp" as i141, "x264" as i142, "x265" as i143, "xcb-proto" as i144, "xmlto" as i145, "xorgproto" as i146, "xtrans" as i147, "xvid" as i148, "xz" as i149, "yasm" as i150, "zeromq" as i151, "zimg" as i152, "zip" as i153, "zlib" as i154, "zstd" as i155

pkg(
  name: "openimageio",
  version: "2.2.15.0",
  dependencies: [hi, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, i91, i92, i93, i94, i95, i96, i97, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, i138, i139, i140, i141, i142, i143, i144, i145, i146, i147, i148, i149, i150, i151, i152, i153, i154, i155],

  def install(ctx) {
    ctx.write_file(join(ctx.build, "openimageio.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./openimageio.rb")
  }
)
