formula = r"""
class Pushpin < Formula
  desc "Reverse proxy for realtime web services"
  homepage "https://pushpin.org/"
  url "https://github.com/fanout/pushpin/releases/download/v1.32.2/pushpin-1.32.2.tar.bz2"
  sha256 "67fd1cabcaf95deb998007abb189acf06d72f761caae7292fe2a6cb35de779f1"
  license "AGPL-3.0-or-later"
  head "https://github.com/fanout/pushpin.git"

  bottle do
    sha256 big_sur:  "6a83e882a8717b8c984aa8a04a482b4280a491c06c90e5c1712eefff361d9a88"
    sha256 catalina: "86a992260da757b698f8854d9ec186222c1c2b3e0439ef7220aef5f8cae00682"
    sha256 mojave:   "ed11f20d8380fc0be0d4377d93fea9659ae2387a9964dd24720eed59ee46ec22"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "condure"
  depends_on "mongrel2"
  depends_on "python@3.9"
  depends_on "qt@5"
  depends_on "zeromq"
  depends_on "zurl"

  def install
    system "./configure", "--prefix=#{prefix}",
                          "--configdir=#{etc}",
                          "--rundir=#{var}/run",
                          "--logdir=#{var}/log",
                          "--extraconf=QMAKE_MACOSX_DEPLOYMENT_TARGET=#{MacOS.version}"
    system "make"
    system "make", "install"
  end

  test do
    conffile = testpath/"pushpin.conf"
    routesfile = testpath/"routes"
    runfile = testpath/"test.py"

    cp HOMEBREW_PREFIX/"etc/pushpin/pushpin.conf", conffile

    inreplace conffile do |s|
      s.gsub! "rundir=#{HOMEBREW_PREFIX}/var/run/pushpin", "rundir=#{testpath}/var/run/pushpin"
      s.gsub! "logdir=#{HOMEBREW_PREFIX}/var/log/pushpin", "logdir=#{testpath}/var/log/pushpin"
    end

    routesfile.write <<~EOS
      * localhost:10080
    EOS

    runfile.write <<~EOS
      import threading
      from http.server import BaseHTTPRequestHandler, HTTPServer
      from urllib.request import urlopen
      class TestHandler(BaseHTTPRequestHandler):
        def do_GET(self):
          self.send_response(200)
          self.end_headers()
          self.wfile.write(b'test response\\n')
      def server_worker(c):
        global port
        server = HTTPServer(('', 10080), TestHandler)
        port = server.server_address[1]
        c.acquire()
        c.notify()
        c.release()
        try:
          server.serve_forever()
        except:
          server.server_close()
      c = threading.Condition()
      c.acquire()
      server_thread = threading.Thread(target=server_worker, args=(c,))
      server_thread.daemon = True
      server_thread.start()
      c.wait()
      c.release()
      with urlopen('http://localhost:7999/test') as f:
        body = f.read()
        assert(body == b'test response\\n')
    EOS

    pid = fork do
      exec "#{bin}/pushpin", "--config=#{conffile}"
    end

    begin
      sleep 3 # make sure pushpin processes have started
      system Formula["python@3.9"].opt_bin/"python3", runfile
    ensure
      Process.kill("TERM", pid)
      Process.wait(pid)
    end
  end
end

"""

import "homebrew-install" as hi

import "asciidoc" as i0, "asciidoctor" as i1, "autoconf" as i2, "automake" as i3, "berkeley-db" as i4, "bison" as i5, "boost" as i6, "brotli" as i7, "bzip2" as i8, "c-ares" as i9, "cmake" as i10, "condure" as i11, "curl" as i12, "docbook" as i13, "docbook-xsl" as i14, "expat" as i15, "flex" as i16, "gdbm" as i17, "gettext" as i18, "gnu-getopt" as i19, "gperf" as i20, "help2man" as i21, "icu4c" as i22, "jemalloc" as i23, "krb5" as i24, "libev" as i25, "libffi" as i26, "libgcrypt" as i27, "libgpg-error" as i28, "libidn2" as i29, "libsodium" as i30, "libssh2" as i31, "libtool" as i32, "libunistring" as i33, "libxml2" as i34, "libxslt" as i35, "m4" as i36, "mongrel2" as i37, "mpdecimal" as i38, "ncurses" as i39, "nghttp2" as i40, "ninja" as i41, "openldap" as i42, "openssl@1.1" as i43, "perl" as i44, "pkg-config" as i45, "python@3.9" as i46, "qt@5" as i47, "readline" as i48, "rtmpdump" as i49, "rust" as i50, "source-highlight" as i51, "sphinx-doc" as i52, "sqlite" as i53, "unzip" as i54, "xmlto" as i55, "xz" as i56, "zeromq" as i57, "zip" as i58, "zlib" as i59, "zstd" as i60, "zurl" as i61

pkg(
  name: "pushpin",
  version: "1.32.2",
  dependencies: [hi, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61],

  def install(ctx) {
    ctx.write_file(join(ctx.build, "pushpin.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./pushpin.rb")
  }
)
