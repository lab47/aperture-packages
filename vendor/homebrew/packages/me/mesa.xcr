formula = r"""
class Mesa < Formula
  include Language::Python::Virtualenv

  desc "Graphics Library"
  homepage "https://www.mesa3d.org/"
  url "https://archive.mesa3d.org/mesa-21.1.3.tar.xz"
  sha256 "cbe221282670875ffd762247b6a2c95dcee91d0a34c29802c75ef761fc891e69"
  license "MIT"
  head "https://gitlab.freedesktop.org/mesa/mesa.git", branch: "main"

  livecheck do
    url "https://www.mesa3d.org/news/"
    regex(/>\s*Mesa v?(\d+(?:\.\d+)+) is released\s*</i)
  end

  bottle do
    sha256 arm64_big_sur: "c7907e55c7e5c96769c6bfee399b6561200492a7a2ade0267ee662c9b7a40544"
    sha256 big_sur:       "b8e5a44cde3fa42be9dd467d1f9dec8819b63523cc65f7bcbe75a0519674c524"
    sha256 catalina:      "dc9dae9f087cc09fcb9c66904dde648095a453f2e0c472eb602d163347b7faac"
    sha256 mojave:        "69ac1af2a4c12811a0efabfef9d33b3ccb8abaa61385b8edbfc4cc6a1ab36fd6"
    sha256 x86_64_linux:  "8ba4ded2dae9e9aab86ad6031e7efab6aa8eb471d82acfd76ac7b25d1adca746"
  end

  depends_on "meson" => :build
  depends_on "ninja" => :build
  depends_on "pkg-config" => :build
  depends_on "python@3.9" => :build
  depends_on "expat"
  depends_on "gettext"
  depends_on "libx11"
  depends_on "libxcb"
  depends_on "libxdamage"
  depends_on "libxext"

  uses_from_macos "bison" => :build
  uses_from_macos "flex" => :build
  uses_from_macos "llvm"
  uses_from_macos "ncurses"
  uses_from_macos "zlib"

  on_linux do
    depends_on "gcc"
    depends_on "lm-sensors"
    depends_on "libelf"
    depends_on "libxfixes"
    depends_on "libxrandr"
    depends_on "libxshmfence"
    depends_on "libxv"
    depends_on "libxvmc"
    depends_on "libxxf86vm"
    depends_on "libva"
    depends_on "libvdpau"
    depends_on "libdrm"
    depends_on "wayland"
    depends_on "wayland-protocols"
  end

  fails_with gcc: "5"

  resource "Mako" do
    url "https://files.pythonhosted.org/packages/5c/db/2d2d88b924aa4674a080aae83b59ea19d593250bfe5ed789947c21736785/Mako-1.1.4.tar.gz"
    sha256 "17831f0b7087c313c0ffae2bcbbd3c1d5ba9eeac9c38f2eb7b50e8c99fe9d5ab"
  end

  resource "glxgears.c" do
    url "https://gitlab.freedesktop.org/mesa/demos/-/raw/faaa319d704ac677c3a93caadedeb91a4a74b7a7/src/xdemos/glxgears.c"
    sha256 "3873db84d708b5d8b3cac39270926ba46d812c2f6362da8e6cd0a1bff6628ae6"
  end

  resource "gl_wrap.h" do
    url "https://gitlab.freedesktop.org/mesa/demos/-/raw/faaa319d704ac677c3a93caadedeb91a4a74b7a7/src/util/gl_wrap.h"
    sha256 "c727b2341d81c2a1b8a0b31e46d24f9702a1ec55c8be3f455ddc8d72120ada72"
  end

  patch do
    url "https://gitlab.freedesktop.org/mesa/mesa/-/commit/50064ad367449afad03c927f7e572c138b05c5d4.diff"
    sha256 "2f17f8f03a54350025fff65ec6d410b1c2f924a30199551457a0f43a9bada7b6"
  end

  def install
    ENV.prepend_path "PATH", Formula["python@3.9"].opt_libexec/"bin"

    venv_root = libexec/"venv"
    venv = virtualenv_create(venv_root, "python3")
    venv.pip_install resource("Mako")

    ENV.prepend_path "PATH", "#{venv_root}/bin"

    mkdir "build" do
      args = ["-Db_ndebug=true"]

      on_linux do
        args << "-Dplatforms=x11,wayland"
        args << "-Dglx=auto"
        args << "-Ddri3=true"
        args << "-Ddri-drivers=auto"
        args << "-Dgallium-drivers=auto"
        args << "-Dgallium-omx=disabled"
        args << "-Degl=true"
        args << "-Dgbm=true"
        args << "-Dopengl=true"
        args << "-Dgles1=true"
        args << "-Dgles2=true"
        args << "-Dxvmc=true"
        args << "-Dvalgrind=false"
        args << "-Dtools=drm-shim,etnaviv,freedreno,glsl,nir,nouveau,xvmc,lima"
      end

      system "meson", *std_meson_args, "..", *args
      system "ninja"
      system "ninja", "install"
    end

    on_linux do
      # Strip executables/libraries/object files to reduce their size
      system("strip", "--strip-unneeded", "--preserve-dates", *(Dir[bin/"**/*", lib/"**/*"]).select do |f|
        f = Pathname.new(f)
        f.file? && (f.elf? || f.extname == ".a")
      end)
    end
  end

  test do
    %w[glxgears.c gl_wrap.h].each { |r| resource(r).stage(testpath) }
    flags = %W[
      -I#{include}
      -L#{lib}
      -L#{Formula["libx11"].lib}
      -L#{Formula["libxext"].lib}
      -lGL
      -lX11
      -lXext
      -lm
    ]
    system ENV.cc, "glxgears.c", "-o", "gears", *flags
  end
end

"""

import "homebrew-install" as hi

import "bison" as i0, "bzip2" as i1, "expat" as i2, "flex" as i3, "gcc" as i4, "gdbm" as i5, "gettext" as i6, "gpatch" as i7, "libdrm" as i8, "libelf" as i9, "libffi" as i10, "libva" as i11, "libvdpau" as i12, "libx11" as i13, "libxcb" as i14, "libxdamage" as i15, "libxext" as i16, "libxfixes" as i17, "libxrandr" as i18, "libxshmfence" as i19, "libxv" as i20, "libxvmc" as i21, "libxxf86vm" as i22, "llvm" as i23, "lm-sensors" as i24, "meson" as i25, "mpdecimal" as i26, "ncurses" as i27, "ninja" as i28, "openssl@1.1" as i29, "pkg-config" as i30, "python@3.9" as i31, "readline" as i32, "sqlite" as i33, "unzip" as i34, "wayland" as i35, "wayland-protocols" as i36, "xz" as i37, "zip" as i38, "zlib" as i39

pkg(
  name: "mesa",
  version: "21.1.3",
  description: "Graphics Library",
  url: "https://www.mesa3d.org/",
  metadata: %{
    "license": "MIT",
    "source": "homebrew",
  },
  dependencies: [hi, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39],

  def install(ctx) {
    ctx.write_file(join(ctx.build, "mesa.rb"), formula)
    ctx.system("homebrew-install", ctx.prefix, ctx.state_dir, "./mesa.rb")
  }
)
