import fetch

version = "1.16.3"
sha256 = "b298d29de9236ca47a023e382313bcc2d2eed31dfa706b60a04103ce83a71a25"

bootstrap = None

if platform.os == "darwin" {
  bootstrap = fetch.archive(
    url: "https://storage.googleapis.com/golang/go1.16.darwin-amd64.tar.gz",
    sum: ("sha256", "6000a9522975d116bf76044967d7e69e04e982e9625330d9a539a8b45395f9a8"),
  )
} else {
  bootstrap = fetch.archive(
    url: "https://storage.googleapis.com/golang/go1.16.linux-amd64.tar.gz",
    sum: ("sha256", "013a489ebb3e24ef3d915abe5b94c3286c070dfe0818d5bca8108f1d6e8440d2"),
  )
}

pkg(
  name: "go",
  version: version,
  input: inputs(
    source: fetch.archive(
      url: "https://dl.google.com/go/go"+version+".src.tar.gz",
      sum: ("sha256", sha256),
    ),
    gobootstrap: bootstrap,
  )

  def install(ctx) {
    libexec = ctx.prefix+"/libexec"
    bin = ctx.prefix+"/bin"

    ctx.set_env("GOROOT_BOOTSTRAP", ctx.build+"/gobootstrap/go")
    ctx.set_env("GOROOT_FINAL", libexec)
    ctx.set_env("GOOS", "darwin")
    ctx.set_env("GOCACHE", ctx.build+"/cache")

    ctx.system("./make.bash", "--no-clean", dir: "source/go/src")

    ctx.rm_rf("pkg/obj")
    ctx.rm_rf("gobootstrap")

    ctx.install_files(target: libexec, pattern: "source/go/*")
    ctx.install_files(target: bin, pattern: libexec+"/bin/go*", symlink: True)

    ctx.system(bin+"/go", "install", "-race", "std")

    ctx.prepend_env("PATH", bin)
    ctx.set_env("GOPATH", ctx.build)
  }
)
